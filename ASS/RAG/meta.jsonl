{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 2, "chunk_idx": 0, "text": "Advanced Spectral Solver Abstract The Advanced Spectral Solver is an app specifically developed for conducting analyses in Raman spectroscopy. This tool is equipped with a range of functionalities that not only cover fundamental Raman spectrum analysis but also incorporate a set of advanced capabilities such as data filtering. The Solver allows users to engage in the analysis of one-dimensional Raman maps, which entail variations in measurement conditions, or alternatively, to conduct analysis of two-dimensional mapping, which include lateral scanning of the selected area. 1"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 3, "chunk_idx": 0, "text": "Advanced Spectral Solver Contents Abstract 1 Contents 2 1 Introduction 3 2 Main Window 4 2.1 Environment of the Main Window . . . . . . . . . . . . . . . . . . . . . . . . . . 4 2.2 Load - Import of Data . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 2.3 ZOOM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.4 Reset Zoom . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.5 Build/Edit model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.6 Optimize model . . . . ."}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 3, "chunk_idx": 1, "text": ". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.6 Optimize model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 3 Advanced 12 3.1 Filtering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12 3.2 Batch analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14 3.3 1D mapping . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14 3.4 2D mapping . . . . . . . . . . . . . . . ."}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 3, "chunk_idx": 2, "text": ". . . . . . . . . . . . . . . . . . . . 14 3.4 2D mapping . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 3.5 Excel plotter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 4, "chunk_idx": 0, "text": "Advanced Spectral Solver 1 Introduction This open-source Python application is designed to simplify the analysis of Raman spectroscopy data, with a particular focus on multi-peak fitting, batch data processing, and Raman spectroscopy mapping (1D and 2D). Originally developed for academic and research use, the app provides a powerful, user-friendly graphical interface built with Tkinter, enabling scientists and students to interactively explore and interpret Raman spectra without writing code. So far this app can work with data acquired with HORIBA and Witec equipment, but any other spectrometers could be implemented. The application supports: • Importing and visualizing Raman spectra, including 1D and 2D spatial maps (e.g. line scans, hyperspectral images) • Flexible spectral fitting using standard peak models (Gaussian, Lorentzian, Voigt, etc.) with bounds and constraints • Export and import of defined models, significantly reducing the time required to recreate fitting models from scratch for new datasets or similar spectral analyses. • Batch fitting routines for consistent analysis of multiple spectra • Export options for peak parameters, fitted curves, and processed datasets • Analysis of Raman map in 2D (spatial) and 1D (timescan, linescan and electrochemical potential) mode Whether you’re working on a few spectra or hundreds of Raman maps, this app aims to accelerate insights, reduce manual labor, and improve reproducibility in spectroscopic analysis. 3"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 5, "chunk_idx": 0, "text": "Advanced Spectral Solver 2 Main Window 2.1 Environment of the Main Window The primary window of this application presents a straightforward and user-friendly workflow. Within the left panel, there is a button sequence designed to lead you step by step through the essential analysis or Raman spectrum. These buttons are: • Load • ZOOM • Reset Zoom • Build/Edit model • Optimize Each of these functions will be described separately. Another method to access various functions, including the more advanced options, is via the top menu. 2.2 Load - Import of Data This app is programmed to read .txt files exported from the HORIBA and WITec spectrometers. Since the structure of exported files can vary between instruments and measurement modes, import routines are designed to be flexible and adaptable. To simplify the workflow for repeated analysis or data sharing, the app also supports its own lightweight Default format. This format contains no headers or metadata — just raw spectral data — making it easy to export a specific region of interest and re-import it later for further analysis. This approach enables users to focus on the parts of the spectrum that matter most, without the overhead of parsing complex file structures. Additionally, this format is readily interpretable by various software applications such as Excel, Origin, and similar programs. Activating the"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 5, "chunk_idx": 1, "text": "enables users to focus on the parts of the spectrum that matter most, without the overhead of parsing complex file structures. Additionally, this format is readily interpretable by various software applications such as Excel, Origin, and similar programs. Activating the Load button will launch a window that prompts the user to choose the file type to be loaded (HORIBA, WITec, or default). Upon selecting the file type, the user selects the desired .txt file using a file browser. The import process for each file type can be accelerated by using shortcut keys which will open the file browser directly. • HORIBA - ”Ctrl+h” • WITec - ”Ctrl+w” • Default - ”Ctrl+d” 4"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 6, "chunk_idx": 0, "text": "Advanced Spectral Solver 2.3 ZOOM Clicking on a ZOOM button will trigger the span selector, enabling the user to choose a range along the Raman shift axis for analysis. Once activated, the user can select the region by holding down the left mouse button and dragging the cursor across the desired Raman shift spectrum. Following the release, the graph will automatically refresh along both the Raman shift axis, as determined by the span selector, and the intensity axis in accordance with the displayed data. If it is necessary to store data for future reference, you can right-click on the plot and choose the ”Save spectrum” option. This action enables you to save the currently displayed segment of the spectrum as a text file in the ”default format”. 2.4 Reset Zoom Clicking the ”Reset Zoom” button will just reset the boundaries set by the ZOOM span selector. 2.5 Build/Edit model Pressing this button opens a top-level window where users can construct the composite model using predefined profile functions (to be explained later). A new function can be incorporated into the model with the ”Add function” button. Subsequently, a new dropdown menu will appear on the right panel of the model builder window. After selecting a function, a function label and input field for function parameters will be available. While the label"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 6, "chunk_idx": 1, "text": "with the ”Add function” button. Subsequently, a new dropdown menu will appear on the right panel of the model builder window. After selecting a function, a function label and input field for function parameters will be available. While the label is optional, it helps navigate the composite model, particularly in complex models. Labels support basic mathematical formatting using matplotlib-style syntax: use underscores for subscripts (e.g., \"G {2D}\" produces G2D), circumflex sign (ˆ) for superscripts (e.g., \"I^2\" gives I2), and prepend a backslash to insert Greek letters (e.g., \"\\alpha\" gives α). When using the mathematical format whole label need to be closed between dollar signs, for example: $random label$. By delfault the math formated text is written with italic, if you want to have your label writen with normal text you need to add \\mathtm{} at the beginning of the label. All together label can look like $\\mathrm{\\Gamma {2D}}$ which will produce label Γ2D. The first column for parameter entry is for the parameter value, with the next two columns for specifying the lower and upper boundaries, preventing the parameter from surpassing these limits during fitting. Users can input these boundaries manually or opt for the ”Guess” feature, selecting the spectral region to be described by the chosen profile function with the span selector. Peak parameter estimation is based on the"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 6, "chunk_idx": 2, "text": "surpassing these limits during fitting. Users can input these boundaries manually or opt for the ”Guess” feature, selecting the spectral region to be described by the chosen profile function with the span selector. Peak parameter estimation is based on the residual spectrum (raw spectrum minus defined 5"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 7, "chunk_idx": 0, "text": "Advanced Spectral Solver model), making it crucial to define the background function as an initial step in model building. Following selection, the function values and some boundaries are automatically populated. The peak intensity’s lower boundary is set at 0 to avoid fitting negative peaks, and the peak position’s boundaries are confined within the selection limits, preventing the peak from shifting outside its designated area. If the estimation is imprecise or requires adjustment, all parameters can be manually modified. Important to note, a function won’t appear in the composite model until it’s saved with the save button. When the app hosts an active composite model, it automatically displays the residual spectrum in the upper panel of the app’s graph area, while the main plot showcases the raw data alongside the composite model and all individual functions. All peak functions are charted against the secondary right axis, with the left axis reserved for raw data, the composite model, and background functions (Linear and Sigmoid at present). To eliminate the function from the composite model, you just need to press the ”Delete” button. The function that has been defined can be saved and retrieved as a .json file. This capability provides an opportunity to reuse models that were previously created, which is particularly useful when conducting analyses on similar datasets. Users can save"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 7, "chunk_idx": 1, "text": "The function that has been defined can be saved and retrieved as a .json file. This capability provides an opportunity to reuse models that were previously created, which is particularly useful when conducting analyses on similar datasets. Users can save and access the model through the menu at the top, under the ”Model” section. If a user needs to remove the entire model, for instance, to analyze a different spectral region or a separate dataset, the ”Clear model” option will delete all functions defined in the ”Model builder window”. List of the available function with explanation of their parameters can be find below: 2.5.1 Lorentzian The Lorentzian function models peaks with long tails, typical of lifetime broadening: L(x) = I π · Γ \u0014 1 + \u0010 x−x0 Γ \u00112\u0015 (2.1) Parameters: • I – Integrated intensity (area under the curve) • x0 – Peak center • FWHM = 2Γ – Full width at half maximum 2.5.2 Gaussian The Gaussian function is ideal for symmetric peaks influenced by noise or instrument resolution: 6"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 8, "chunk_idx": 0, "text": "Advanced Spectral Solver G(x) = I σ √ 2π exp −(x −x0)2 2σ2 ! (2.2) Parameters: • I – Total area under the curve • x0 – Peak center (mean) • FWHM = 2 √ 2 ln 2 · σ 2.5.3 Voigt The Voigt profile is a convolution of Gaussian and Lorentzian broadening: V (x) = I · Voigt(x −x0, σ, γ) (2.3) Parameters: • I – Area under the peak • x0 – Peak center • σ – Standard deviation (Gaussian part) • γ – Half-width at half-maximum (Lorentzian part) 2.5.4 Asymmetrical Lorentzian This variation introduces asymmetry to the Lorentzian profile: AL(x) = I π · Γ(x) \u0014 1 + \u0010 x−x0 Γ(x) \u00112\u0015, Γ(x) = FWHM 2 (1 + α(x −x0)) (2.4) Parameters: • I – Integrated intensity • x0 – Peak center • FWHM – Full width at half maximum for symmetric case • α – Asymmetry parameter (α = 0 gives symmetric Lorentzian) 7"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 9, "chunk_idx": 0, "text": "Advanced Spectral Solver 2.5.5 Fano Resonance The Fano function describes an asymmetric resonance due to quantum interference: F(x) = I · (q + ϵ)2 1 + ϵ2 , ϵ = x −x0 Γ (2.5) Parameters: • I – Area under the resonance • x0 – Resonance position • FWHM = 2Γ – Width of the resonance • q – Asymmetry parameter 2.5.6 Linear Simple linear trend used for baseline correction: y(x) = m · x + b (2.6) Parameters: • m – Slope • b – Intercept 2.5.7 Sigmoid Smooth transition often used for step-like backgrounds: S(x) = A 1 + e−(x−x0)/s + B (2.7) Parameters: • A – Amplitude of the step • x0 – Center of the transition • s – Steepness (lower = sharper) • B – Baseline offset 8"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 10, "chunk_idx": 0, "text": "Advanced Spectral Solver 2.6 Optimize model Once the model is defined, you can start the fit process by clicking the ”Optimize” button. This will trigger an optimization procedure that minimizes the sum of squared residuals using a non-linear approach. This is accomplished with the SciPy (scientific Python library) function curve fit, and additional information is available in the official documentation. After finalizing the fit, users are presented with multiple methods to save the results. These can be accessed via right-clicking on the graph. • Save plot - saves the visual representation as a .png file • Save report - generates a .txt file containing the optimized parameters and fitting statistics, which will be explained in detail later • Save both - concurrently stores both the Plot and Report in the chosen directory • Save data - exports an Excel file containing the raw data shown, the composite model, and each individual function. 2.6.1 Structure of the report file The report file contains values of the optimized parameters including their error from the fit. To help evaluate the quality and reliability of the fitted model, the application also computes several statistical metrics based on the residuals between the data and the model. These include R2, adjusted R2, RMSE, AIC, and BIC. Also the covariance and carrelation matrix is included, Parameter Errors"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 10, "chunk_idx": 1, "text": "of the fitted model, the application also computes several statistical metrics based on the residuals between the data and the model. These include R2, adjusted R2, RMSE, AIC, and BIC. Also the covariance and carrelation matrix is included, Parameter Errors (Uncertainties) Each fitted parameter is reported with a corresponding standard error, which reflects the uncertainty in its value based on the local curvature of the cost function. Smaller errors indicate higher confidence in the parameter estimate. Coefficient of Determination (R2) R2 = 1 −SSres SStot • SSres = P(yi −fi)2: residual sum of squares. • SStot = P(yi −¯y)2: total variance of the data. R2 indicates how well the model explains the variance in the data. A value close to 1 suggests a good fit. 9"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 11, "chunk_idx": 0, "text": "Advanced Spectral Solver Adjusted R2 R2 adj = 1 −(1 −R2) · n −1 n −p • n – Number of data points • p – Number of fitted parameters Unlike R2, the adjusted R2 accounts for the complexity of the model. It penalizes the use of unnecessary parameters and is better suited for comparing models with different numbers of variables. Root Mean Square Error (RMSE) RMSE = s 1 n X (yi −fi)2 RMSE gives an absolute measure of the average deviation between the data and the model. Lower values indicate a better fit. Akaike Information Criterion (AIC) AIC = n · ln \u0012SSres n \u0013 + 2p AIC evaluates model quality by balancing goodness of fit and complexity. Lower AIC values indicate a more parsimonious (efficient) model. Useful for comparing different model structures. Bayesian Information Criterion (BIC) BIC = n · ln \u0012SSres n \u0013 + p · ln(n) BIC serves a similar purpose to AIC but penalizes model complexity more heavily. Particularly useful when the goal is to identify the simplest adequate model. Note: AIC and BIC are only meaningful when comparing fits on the same dataset. They are not absolute indicators of fit quality, but help guide model selection. 10"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 12, "chunk_idx": 0, "text": "Advanced Spectral Solver Covariance Matrix The covariance matrix describes how the uncertainties of different parameters are interrelated. For parameters ai and aj, the covariance Cov(ai, aj) measures how variations in one parameter correspond to variations in the other. • Diagonal elements: Variances of each parameter, i.e., Var(ai) = σ2 i . • Off-diagonal elements: Covariances between pairs of parameters. Large off-diagonal values suggest that the corresponding parameters are not independently determined; a change in one may be partially compensated by a change in another. Correlation Matrix The correlation matrix is a normalized version of the covariance matrix. Each element is calculated as: Corr(ai, aj) = Cov(ai, aj) σi σj where σi and σj are the standard errors of parameters ai and aj. • Values range from −1 to +1. • Corr(ai, aj) = 0 indicates statistical independence. • Values close to ±1 indicate strong linear dependence between parameters. Note: Strong correlations (e.g., |Corr| > 0.95) may indicate that the model is overparameterized or that parameters are physically redundant. 11"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 13, "chunk_idx": 0, "text": "Advanced Spectral Solver 3 Advanced This section of the help document outlines the app’s advanced features. These functionalities are all available through the ”Advanced” option in the top menu. 3.1 Filtering To reduce noise and enhance the interpretability of spectral data, the application offers several filtering methods. Each filter has its own characteristics and is suitable for different types of data and noise profiles. For application of the filter to the data just select the type of the filter you would like to apply, fitt the input parameters and click ”Apply”, this filter will be automatically applied to all data plotted in the Main window. To deactivate the filter, ”Disable” button need to be clicked. 3.1.1 Savitzky–Golay Filter The Savitzky–Golay filter smooths data by fitting a low-degree polynomial to a moving window of points using least squares. Unlike a simple moving average, it preserves the original shape and features of the signal, such as peak height and width. Parameters: • window length – Number of points in the smoothing window. Must be odd and larger than the polynomial order. • polyorder – Order of the polynomial used for fitting (e.g., 2 for quadratic, 3 for cubic). Pros: • Retains peak shapes and derivatives. • Effective for reducing random noise without distorting signal structure. Cons: • Sensitive to window size; too"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 13, "chunk_idx": 1, "text": "polyorder – Order of the polynomial used for fitting (e.g., 2 for quadratic, 3 for cubic). Pros: • Retains peak shapes and derivatives. • Effective for reducing random noise without distorting signal structure. Cons: • Sensitive to window size; too large a window can flatten peaks. • May introduce artifacts at the edges. Recommended Use: Ideal for general-purpose smoothing when signal shape must be preserved (e.g., Raman or IR spectra). Avoid If: The signal has sharp spikes or highly irregular noise; consider median filtering instead. 12"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 14, "chunk_idx": 0, "text": "Advanced Spectral Solver 3.1.2 Moving Average Filter The moving average (boxcar) filter replaces each point with the mean of its surrounding neighbors, effectively smoothing high-frequency noise. Parameters: • window size – Width of the averaging window in number of points. Pros: • Simple and fast to compute. • Smooths out random fluctuations effectively. Cons: • Can blunt sharp features and reduce resolution. • Distorts peak height and width. Recommended Use: Suitable for baseline smoothing or reducing random noise when precise peak shape is not critical. Avoid If: The data contains closely spaced or narrow peaks that must be preserved accurately. 3.1.3 Median Filter The median filter replaces each point with the median of the surrounding window, making it very effective at removing sharp outliers (e.g., cosmic rays or spikes). Parameters: • window size – Width of the median window. Must be an odd integer. Pros: • Excellent for removing impulsive noise (spikes). • Preserves edges better than moving average. Cons: • Not ideal for reducing continuous Gaussian noise. • Can distort small peaks if the window is too large. Recommended Use: Use when data contains discrete spike artifacts or experimental glitches. Avoid If: Your data has small-amplitude features that could be suppressed by the median operation. 13"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 15, "chunk_idx": 0, "text": "Advanced Spectral Solver 3.1.4 Fourier Low-Pass Filter This method filters the signal in the frequency domain by removing high-frequency components above a specified cutoff. It is suitable for uniformly spaced data. Parameters: • cutoff – Cutoff frequency (in units of inverse x-axis units), above which components are removed. Pros: • Effective for removing high-frequency noise. • Retains overall spectral shape well. Cons: • Requires uniformly spaced data. • Can introduce ringing artifacts (Gibbs phenomenon). Recommended Use: Effective when noise is dominated by high-frequency components and the data is evenly spaced. Avoid If: The data is unevenly sampled, or if phase preservation is critical (e.g., for derivative spectroscopy). 3.2 Batch analysis Batch analysis offers an automated way of analyzing all the spectra in the selected folder. For using this functionality, just load one spectrum, select the desired range of analysis, and build/load the appropriate model. Following the execution of the Batch analysis, the application simply requests the format of the spectrum files it will process and the directory where they are located. It then proceeds to analyze each file in the folder, using the same boundaries as the spectrum used to build the model, optimizing the model parameters, and storing the images in a subfolder within the chosen directory. Once all spectra have been fitted, the optimized parameter values and their"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 15, "chunk_idx": 1, "text": "folder, using the same boundaries as the spectrum used to build the model, optimizing the model parameters, and storing the images in a subfolder within the chosen directory. Once all spectra have been fitted, the optimized parameter values and their errors are documented in an Excel file within the same subfolder. 3.3 1D mapping One-dimensional (1D) Raman mapping refers to the analysis of spectral evolution as a function of a single varying parameter. In the context of this application, 1D maps are typically 14"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 16, "chunk_idx": 0, "text": "Advanced Spectral Solver acquired by recording Raman spectra sequentially while changing an external variable, such as electrochemical potential, elapsed time, or position along a linear spatial scan. This type of analysis enables users to monitor dynamic changes in materials, detect chemical or structural gradients, and track reaction progress over time or space. The app supports the import, visualization, and automated processing of 1D datasets in a user-friendly format designed to allow efficient exploration of such trends. Currently, this app is capable of importing only 1D files, specifically those from Horiba .txt files that have been exported as ”split” arrays. To export the timemap and line scans in this format, navigate to the save button in LabSpec6 software, click the small arrow next to it, and select the ”Split array” option. This will automatically export the map into separate files, including time or distance information in both the filename and the file header. For potential maps (SEC - SpectroElectroChemistry), the files must include the potential values applied to the working electrode during spectrum acquisition, with mV as the locator string for reading of the potential. For example, a filename such as sample 12 −800mV.txt indicates a spectrum recorded at -800mV. The loading of the Witec format will be added in the future. To load the dataset, first specify the source spectroscope"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 16, "chunk_idx": 1, "text": "reading of the potential. For example, a filename such as sample 12 −800mV.txt indicates a spectrum recorded at -800mV. The loading of the Witec format will be added in the future. To load the dataset, first specify the source spectroscope (Horiba or Witec) along with the measurement mode to be analyzed (timemap, linemap, SEC). Clicking the ”Load” button will then prompt a window where you can select the directory containing the .txt files. Another section allows the user to specify the map’s display details. The left and right cutoffs set the spectral range to be plotted, while the lower and upper indices define the index region (such as time, length, or potential). The colorscale indicates the color scheme for data visualization. The correction option provides basic background correction for data display: ”none” for raw data, ”zero” sets the lowest point of the spectrum to zero, and ”linear” calculates and subtracts a line profile from the raw data using the first and last points of each spectrum. Orientation specifies whether data is shown from top to bottom or the reverse. Interpolation offers graphical smoothing for the image, applicable only to heatmaps, with various strengths available (these are built-in functions of the ‘imshow‘ function in matplotlib; further details are in the matplotlib documentation). 3.3.1 Heatmap The heatmap presentation of the 1D map"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 16, "chunk_idx": 2, "text": "offers graphical smoothing for the image, applicable only to heatmaps, with various strengths available (these are built-in functions of the ‘imshow‘ function in matplotlib; further details are in the matplotlib documentation). 3.3.1 Heatmap The heatmap presentation of the 1D map data is based on the restructuring of the input data in the 2D matrix using the Raman shift and the index as columns and index, respectively. The intensity values are then used as the variable for the color coding of the data set. The setting of the smoothing can help with the lower the spectral noise and steps in the picture caused by small index sampling. To mark the desired area, right-click on the menu and select the ”Select region” option. You can then click and drag the mouse over the image to highlight the area 15"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 17, "chunk_idx": 0, "text": "Advanced Spectral Solver of interest. Upon releasing the mouse button, the spectral and index limits will be updated accordingly. An additional capability provided by this heatmap environment is the option to plot the spectrum directly onto the Main window. To enable this feature, simply perform a right-click on the desired spectrum image that you wish to examine thoroughly, and then choose the ”Plot in Main” option from the context menu. 3.3.2 Lineplot Another way to present a 1D Raman map is through a line plot. This method displays the spectra as a line plot with an offset determined by the slider. The slider adjusts the offset based on a percentage of the dataset’s maximum intensity, making it dependent on the correction settings. The spectra are subsequently color-coded according to their indices. In this case, by right-clicking and choosing ”Select region,” only the spectral range will be selected. The exclusion of the indexes must be performed manually. 3.3.3 Fitting of the 1D map The Fit button triggers the fitting process for the one-dimensional map across the specified spectral range using the composite model set in the main window. In case a model is not yet specified, you may export the spectrum from the heatmap to the main window, where you can either manually define the model or import it from an"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 17, "chunk_idx": 1, "text": "composite model set in the main window. In case a model is not yet specified, you may export the spectrum from the heatmap to the main window, where you can either manually define the model or import it from an existing .json file. Once the fitting process concludes, the resulting fit parameters and their corresponding indices are saved into an Excel file. 3.4 2D mapping 2D Raman mapping is a procedure in which Raman spectra are measured at different points on a surface, creating a two-dimensional map. Each pixel at this map represents a Raman spectrum, providing detailed information about the sample at each location. Currently this app can analyses only the maps from Witec spectrometer, exported as table with header where columns contains the information about the pixel position (automatic export in Project5/6). Loading of the Horiba 2D maps will be added in the future. In the upper segment of the right column, just beneath the loading button, users can specify the map parameters. This includes defining the spectral region intended for analysis, along with setting the x and y range, allowing for analysis restricted to specific part of the map. The spectral region requires manual setting; however, the x and y limits can be set by right-clicking on the map, selecting the ”Select region” option, and then using"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 17, "chunk_idx": 2, "text": "y range, allowing for analysis restricted to specific part of the map. The spectral region requires manual setting; however, the x and y limits can be set by right-clicking on the map, selecting the ”Select region” option, and then using a left-click to designate the 16"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 18, "chunk_idx": 0, "text": "Advanced Spectral Solver desired area on the map. This function becomes particularly advantageous when a map is already being displayed. 3.4.1 Metric evaluation The initial assessment of the map involves computing the pixel metric. At this point, users have the option to choose among three metrics: the area (which refers to the integration of the spectrum area within a chosen spectral region), the maximum value (indicating the highest data value found within that spectral region), and max position (which denotes the spectral location of this maximum value). To display the metric map, you need to click on the ”Plot metric” button. Additionally, there are other parameters you can adjust: the ”Colormap,” which specifies the color palette for the map, and ”Interpolation,” similar to its application in a 1D heatmap. You have the option to focus on a specific region of the evaluated parameter by setting the Scale’s minimum and maximum values. This approach can help highlight particular data trends. Any values exceeding the set maximum or falling below the minimum will appear as saturated pixels, with their colors corresponding to either the top or bottom of the chosen color scale. Once the metric analysis is done, it do not need to be run again unless the spectral region is changed. If the spectral range is changed the program will automatically"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 18, "chunk_idx": 1, "text": "either the top or bottom of the chosen color scale. Once the metric analysis is done, it do not need to be run again unless the spectral region is changed. If the spectral range is changed the program will automatically detect it and run the new metric analysis after the next ”Plot metric” click. 3.4.2 Fitting of the 2D map To fit the 2D map, it is essential to have the model loaded in the main window, which will be used for fitting. There are multiple approaches to achieve this. If you’re analyzing a known spectral features, you might already have a .json file containing the model from previous work. In that situation, simply load the .json model into the main window. If the model isn’ available, you can manually build it in the main window. You can export the spectrum from a single pixel or the map’s average by right-clicking on the map and choosing ”Plot spectra in Main” or ”Plot average in Main.” It is necesseary to create the metric map first, to have some data to export. Once the model setup is complete, pressing the ”Fit” button initiates the fitting process. When it is finished, the options for plotting the fit variables become accessible. Simply select the desired variable to plot from the ”Fit variable” dropdown menu,"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 18, "chunk_idx": 2, "text": "Once the model setup is complete, pressing the ”Fit” button initiates the fitting process. When it is finished, the options for plotting the fit variables become accessible. Simply select the desired variable to plot from the ”Fit variable” dropdown menu, which is pre-filled with variables from the model used, and then click on the ”Plot fit” button. The other configurations of the map are the same as those for the Metric map. The fitted values can be saved as and excel file for later use using the button ”Save fit”. 17"}
{"source": "C:\\Users\\marti\\Documents\\Data\\RAG_test\\Ass help file\\help.pdf", "page": 19, "chunk_idx": 0, "text": "Advanced Spectral Solver 3.5 Excel plotter The primary function of this feature is to swiftly allow for the visualization of mapping outcomes. Once the Excel file is loaded, users can effortlessly choose the data sources for both the x and y axes, assign appropriate labels, and proceed to create the plot. 18"}
